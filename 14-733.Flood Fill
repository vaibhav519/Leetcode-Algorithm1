class Solution:
    def floodFill(self, image: List[List[int]], sr: int, sc: int, newColor: int) -> List[List[int]]:
        cur_color = image[sr][sc]
        height = len(image)
        width = len(image[0])

        def dfs(sr, sc):
            if 0 <= sr < height and 0 <= sc < width and image[sr][sc] == cur_color and image[sr][sc] != newColor:
                image[sr][sc] = newColor
                dfs(sr + 1, sc)
                dfs(sr - 1, sc)
                dfs(sr, sc + 1)
                dfs(sr, sc - 1)
        dfs(sr, sc)
        
        return image
        
analyze this questions by making a stack âœ…
ALgorithm1 Repeat:  
  
def floodFill(self, image: List[List[int]], sr: int, sc: int, newColor: int) -> List[List[int]]:
    row = len(image)
    col = len(image[0])
    curColor = image[sr][sc]   
    
    def dfs(x, y):
        
        if 0 <= x < row and 0 <= y < col and image[x][y] == curColor and image[x][y] != newColor:  
            image[x][y] = newColor
            
            dfs(x - 1, y)   #UP
            dfs(x + 1, y)   #DOWN
            dfs(x, y + 1)   #RIGHT
            dfs(x, y - 1)   #LEFT
        
    dfs(sr, sc)
    
    return image
If anyone wondering why we check image[x][y] != newColor, it is because if curColor = newColor then even though you keep on changing,
it will be the same color and will result in a loop and hence resulting in stack overflow.
