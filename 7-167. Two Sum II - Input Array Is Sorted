class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        l, r = 0, len(numbers) - 1
        while True:
            currSome = numbers[l] + numbers[r]
            if currSome > target:
                r -= 1
            elif currSome < target:
                l += 1
            else:
                return [l + 1, r + 1]
                
improve the below code
repeated the same digits

class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        def bs(start, end, val):
            while start <= end:
                mid = (start + end) // 2
                if numbers[mid] == val:
                    return mid
                elif numbers[mid] < val:
                    start += 1
                else:
                    end -= 1
            return False
        
        for i in range(len(numbers)):
            diff = target - numbers[i]
            ind2 = bs(i, len(numbers) -1, diff)
            if ind2 != False:
                return [i + 1, ind2 + 1]
                
